# coding: utf-8

"""
    7shifts API

    7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.

    The version of the OpenAPI document: 2023-05-01
    Contact: api-support@7shifts.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from 7_shifts_python_sdk.pydantic.receipts_update_receipt_request_receipt_lines import ReceiptsUpdateReceiptRequestReceiptLines
from 7_shifts_python_sdk.pydantic.receipts_update_receipt_request_tip_details import ReceiptsUpdateReceiptRequestTipDetails

class ReceiptsUpdateReceiptRequest(BaseModel):
    # The net total of the receipt pre tax, post-discounts, pre tips. In cents
    net_total: int = Field(alias='net_total')

    # Receipt create date time. UTC date time in ISO8601 format
    receipt_date: typing.Optional[datetime] = Field(None, alias='receipt_date')

    # The gross total of the receipt in cents
    gross_total: typing.Optional[int] = Field(None, alias='gross_total')

    # The total discounts of the receipt in cents
    total_receipt_discounts: typing.Optional[int] = Field(None, alias='total_receipt_discounts')

    # Total tips in cents
    tips: typing.Optional[int] = Field(None, alias='tips')

    # External user ID of the sales receipt in your system (must be unique per 7shifts location).
    external_user_id: typing.Optional[str] = Field(None, alias='external_user_id')

    # Label for the revenue center for the receipt
    revenue_center: typing.Optional[str] = Field(None, alias='revenue_center')

    receipt_lines: typing.Optional[ReceiptsUpdateReceiptRequestReceiptLines] = Field(None, alias='receipt_lines')

    tip_details: typing.Optional[ReceiptsUpdateReceiptRequestTipDetails] = Field(None, alias='tip_details')

    # Status of the receipt
    status: typing.Optional[Literal["open", "closed", "voided", "deleted"]] = Field(None, alias='status')

    # Order type
    order_type: typing.Optional[Literal["dine_in", "delivery", "take_out"]] = Field(None, alias='order_type')

    # Dining option
    dining_option: typing.Optional[str] = Field(None, alias='dining_option')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
