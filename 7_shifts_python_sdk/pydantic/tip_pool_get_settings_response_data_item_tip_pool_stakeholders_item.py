# coding: utf-8

"""
    7shifts API

    7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.

    The version of the OpenAPI document: 2023-05-01
    Contact: api-support@7shifts.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from 7_shifts_python_sdk.pydantic.tip_pool_get_settings_response_data_item_tip_pool_stakeholders_item_filters import TipPoolGetSettingsResponseDataItemTipPoolStakeholdersItemFilters

class TipPoolGetSettingsResponseDataItemTipPoolStakeholdersItem(BaseModel):
    # Whether this is a contributor or a receiver
    stakeholder_type: Literal["CONTRIBUTION", "DISTRIBUTION"] = Field(alias='stakeholder_type')

    # Whether this stakeholder represents a role or a department
    stakeholder_subtype: Literal["ROLE", "DEPARTMENT"] = Field(alias='stakeholder_subtype')

    # Role ID (null if stakeholder subtype is not 'ROLE')
    role_id: typing.Optional[int] = Field(alias='role_id')

    # Department ID (null if stakeholder subtype is not 'DEPARTMENT')
    department_id: typing.Optional[int] = Field(alias='department_id')

    # Amount of tips they contribute or receive (may be a percentage, number of points, or null, depending on stakeholder type and tip pool distribution type)
    stake_amount: typing.Optional[typing.Union[int, float]] = Field(alias='stake_amount')

    # If the stakeholder is a contribution stakeholder, this field represents whether they contribute based on percent tips, percent sales or percent remaining tips
    contribution_method: typing.Optional[str] = Field(alias='contribution_method')

    # Tip pool stakeholder UUID
    uuid: typing.Optional[typing.Optional[str]] = Field(None, alias='uuid')

    # Tip pool settings UUID
    tip_pool_settings_uuid: typing.Optional[typing.Optional[str]] = Field(None, alias='tip_pool_settings_uuid')

    filters: typing.Optional[TipPoolGetSettingsResponseDataItemTipPoolStakeholdersItemFilters] = Field(None, alias='filters')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
