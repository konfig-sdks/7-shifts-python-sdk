# coding: utf-8

"""
    7shifts API

    7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.

    The version of the OpenAPI document: 2023-05-01
    Contact: api-support@7shifts.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from 7_shifts_python_sdk.pydantic.receipts_update_receipt_request_receipt_lines_item_external_category_ids import ReceiptsUpdateReceiptRequestReceiptLinesItemExternalCategoryIds

class ReceiptsUpdateReceiptRequestReceiptLinesItem(BaseModel):
    # The item ID available to the client
    external_item_id: str = Field(alias='external_item_id')

    external_category_ids: ReceiptsUpdateReceiptRequestReceiptLinesItemExternalCategoryIds = Field(alias='external_category_ids')

    # The quantity of this item
    quantity: int = Field(alias='quantity')

    # The item price in cents
    price: int = Field(alias='price')

    # The item gross price in cents
    gross_item_price: int = Field(alias='gross_item_price')

    # The item net price pre tax, post-discounts, pre tips. In cents
    net_item_price: int = Field(alias='net_item_price')

    # The item discount. In cents
    item_discount: int = Field(alias='item_discount')

    # The item status
    status: Literal["open", "closed", "voided", "deleted"] = Field(alias='status')

    # Line item create date time. UTC date time in ISO8601 format
    created: typing.Optional[datetime] = Field(None, alias='created')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
